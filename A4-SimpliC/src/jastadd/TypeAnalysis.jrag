aspect TypeAnalysis{
	syn nta UnknownType Program.unknownType() = new UnknownType();
    inh UnknownType ASTNode.unknownType();
	eq Program.getChild().unknownType() = unknownType();

    syn boolean Type.isUnkown() = false;
    eq UnkownType.isUnknown() = true;

    syn boolean Type.compatibleWith(Type t) = this.isUnknown() || t.isUnknown() || this.equals(t);
    eq UnknownType.compatibleWith(Type t) = true; 

    syn Type Expr.type();
    eq VariableUse.type() = decl.type();
    eq FunctionUse.type() = decl.type();

    inh Type IdDecl.type();
    eq VariableDecl.getIdDecl().type() = getType();
    eq FunctionDecl.getIdDecl().type() = getType();
    eq Program.unkownDecl().type() = unkownType();

    syn boolean Expr.compatibleTypes();
    eq BinOp.compatibleTypes() = 
        getLeft().type().isUnkown() || 
        getRight().type().isUnkown() ||
        (getLeft().type().equals(getRight().type() && getLeft.type() instanceof IntType));
    
    eq Equals.compatibleTypes() = getLeft().type().compatibleWith(getRight().type());
    eq NotEq.compatibleTypes()  = getLeft().type().compatibleWith(getRight().type());

    eq Assign.compatibleTypes() = 
}
