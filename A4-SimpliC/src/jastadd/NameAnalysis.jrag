import java.util.Set;
import java.util.HashSet;

aspect NameAnalysis {
	/*
	 *		Variables
	 */
	
	syn IdDecl VariableUse.decl() = lookup(getID());
	inh IdDecl VariableUse.lookup(String s);
	
	/*
	 *		Functions
	 */

	inh IdDecl FunctionUse.lookup(String s);
	inh IdDecl FunctionCall.lookup(String s);
	syn IdDecl FunctionUse.decl() = lookup(getID());
	syn IdDecl FunctionCall.decl() = lookup(getID());


	eq Block.getStmt(int index).lookup(String s) {
		IdDecl d = localLookup(s, index);
		if (!d.isUnkown()) return d;
		return lookup(s); // run lookup on parent
	}

	//Block inherits lookup from above
	inh IdDecl Block.lookup(String s);

	eq Program.getBlock().lookup(String s) {
		for(FunctionDecl funcs : getFunctionDecls()) {
			//parameter variables
			for(VariableDecl param : getVariableDecls()) {
				if (param.getIdDecl().getID().equals(s)){
					return param;
				}
			}
			//function name
			if(funcs.getIdDecl().getID().equals(s)){
				return decl;
			}
		}
		return unknownDecl();
	}
	
	syn IdDecl Block.localLookup(String s, int index){
        for(int i = 0 ; i < index; i++) {
			Stmt stmt = Block.getStmt(i);
			if(stmt instanceof VariableDecl){
				VariableDecl d = (VariableDecl) stmt;
				if(d.getIdDecl().getID().equals(s)){
					return d;
				}
			}
		}
		return unknownDecl();
	}
}
