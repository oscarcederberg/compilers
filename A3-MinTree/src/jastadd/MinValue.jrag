aspect MinValue {
	// Exercise 1
	syn int Node.localMin() = 0;

	eq Pair.localMin() {
		int left = getLeft().localMin();
		int right = getRight().localMin();
		return left < right ? left : right;
	}
	eq Leaf.localMin() = getNumber();

	// Exercise 2
	inh int Node.globalMin();
	eq Program.getNode().globalMin() = getNode().localMin();

	// Exercise 3
	syn boolean Leaf.isMinValue() = getNumber() == globalMin();
	
	// Exercise 4
	syn int Program.nbrOfMinValues() = getNode().nbrOfMinValues();
	syn int Node.nbrOfMinValues() = 0;
	eq Pair.nbrOfMinValues() = getLeft().nbrOfMinValues() + getRight().nbrOfMinValues();
	eq Leaf.nbrOfMinValues() = isMinValue() ? 1 : 0;
}
